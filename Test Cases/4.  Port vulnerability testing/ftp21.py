import ftplib
import json
import socket

def is_ftp_port_open(ip, port=21):
    """Check if the FTP port is open before login attempts."""
    try:
        with socket.create_connection((ip, port), timeout=3):
            print("FTP port is open and responding")
            return True
    except Exception as e:
        print("FTP port check failed:", str(e))
        return False

def check_ftp_vulnerability(ip, port):
    if not is_ftp_port_open(ip, port):
        print("Port is not open or does not support FTP")
        return False

    try:
        with open("credentials.json", "r") as file:
            credentials = json.load(file)
    except Exception as e:
        print("Error loading credentials file:", str(e))
        return False

    print(f"\nScanning ftp://{ip}:{port} for FTP login vulnerabilities...\n")

    for entry in credentials:
        username = entry.get("username")
        password = entry.get("password")

        try:
            ftp = ftplib.FTP()
            ftp.connect(ip, port, timeout=5)
            ftp.login(user=username, passwd=password)
            print(f"[SUCCESS] Access granted with {username} / {password}")
            print(f"[VULNERABLE] FTP service on {ip}:{port} is vulnerable.\n")
            ftp.quit()
            return True  # Stop after first success (or remove this line to test all)
        except ftplib.error_perm:
            # print(f"[FAILED] {username} / {password} -> Permission denied")
            continue
        except Exception as e:
            # print(f"[ERROR] {username} / {password} -> {str(e)}")
            continue

    print("\n[SECURE] FTP (port 21) is not vulnerable.\n")
    return False

if __name__ == "__main__":
    target_ip = input("Enter target IP: ").strip()
    target_port = input("Enter port (default 21): ").strip()
    port = int(target_port) if target_port else 21
    check_ftp_vulnerability(target_ip, port)
