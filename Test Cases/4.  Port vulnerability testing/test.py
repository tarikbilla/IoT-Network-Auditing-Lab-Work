import requests
import re
from urllib.parse import urljoin, urlparse

HEADERS_OF_INTEREST = [
    "content-security-policy", "x-frame-options", "x-ua-compatible",
    "x-content-type-options", "strict-transport-security"
]

def analyze_url(url, visited=None):
    if visited is None:
        visited = set()
    if url in visited:
        return
    visited.add(url)

    try:
        r = requests.get(url, timeout=4)
        print(f"{url} [{r.status_code} OK]", end=" ")

        # Basic fingerprint info
        ip = urlparse(url).hostname
        print(f"Country[RESERVED][ZZ], IP[{ip}]", end=", ")

        # Title
        title_match = re.search(r'<title>(.*?)</title>', r.text, re.IGNORECASE | re.DOTALL)
        if title_match:
            print(f"Title[{title_match.group(1).strip()}]", end=", ")

        # Meta refresh
        meta_match = re.search(
            r'<meta\s+http-equiv=["\']refresh["\']\s+content=["\']\d+;\s*url=(.*?)["\']',
            r.text, re.IGNORECASE)
        if meta_match:
            redirect_path = meta_match.group(1)
            absolute_url = urljoin(url, redirect_path)
            print(f"Meta-Refresh-Redirect[{redirect_path}]", end=", ")
            # Recursively follow meta-redirect
            analyze_url(absolute_url, visited)

        # HTML Features
        if "html" in r.text.lower():
            print("HTML5", end=", ")
        if "<script" in r.text.lower():
            print("Script", end=", ")
        if "jquery" in r.text.lower():
            print("JQuery", end=", ")

        # Headers
        uncommon_headers = []
        for h in HEADERS_OF_INTEREST:
            val = r.headers.get(h)
            if val:
                h_clean = h.title()
                print(f"{h_clean}[{val}]", end=", ")
                uncommon_headers.append(h_clean)

        if uncommon_headers:
            print(f"UncommonHeaders[{', '.join(uncommon_headers)}]", end=", ")

        print()

    except Exception as e:
        print(f"{url} [ERROR] {str(e)}")

# Input IP and run scanner
if __name__ == "__main__":
    target_ip = input("Enter IP (default http://192.168.0.1): ").strip() or "http://192.168.0.1"
    analyze_url(target_ip)
